
image: registry.heptapod.net:443/fluiddyn/fluidsimfoam/ci/default:stable

variables:
  WM_PROJECT_DIR: "/usr/share/openfoam"
  OMPI_ALLOW_RUN_AS_ROOT: "1"
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: "1"
  PDM_CACHE_DIR: ${CI_PROJECT_DIR}/.pdm-cache

stages:
  - image
  - test
  - publish
  - build
  - release

cache:
  # Required to keep artifacts from old builds, e.g. from default
  paths:
    - public


# Build an image for the above tasks; this should be a scheduled job, as
# it is quite unnecessary to run on every invocation.
CI image:
  stage: image
  tags:
    - container-registry-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_BUILD_IMAGES == "1"'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - |
      cat > /kaniko/.docker/config.json <<EOF
      {
        "auths": {
          "$CI_REGISTRY": {
            "username": "$CI_REGISTRY_USER",
            "password": "$CI_REGISTRY_PASSWORD"
          }
        }
      }
      EOF
    - >
      /kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/docker/Dockerfile
      --single-snapshot
      --cleanup
      --destination registry.heptapod.net:443/fluiddyn/fluidsimfoam/ci/$CI_COMMIT_HG_BRANCH:stable


pytest:
  stage: test
  script:
    - pdm sync --clean -G test -G pyvista -G solvers
    - pdm run pytest tests doc/examples --cov --cov-report term --cov-report xml
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml


pages:
  stage: publish
  script:
    - pdm sync --clean -G pyvista -G doc -G solvers
    - pdm run xvfb-run --auto-servernum sphinx-build -W -b html -d doc/_build/doctrees doc doc/_build/html
    - mkdir -p public/$CI_COMMIT_REF_NAME
    - rsync -rvc --delete doc/_build/html/* public/$CI_COMMIT_REF_NAME/
    # This directory can become too large leading to error.
    # It can be purged with the botton "Clear runner caches"
    # in https://foss.heptapod.net/fluiddyn/fluidsimfoam/-/pipelines
    - ls public
    - echo "CI_COMMIT_REF_NAME="$CI_COMMIT_REF_NAME
    - echo See https://fluiddyn.pages.heptapod.net/fluidsimfoam/$CI_COMMIT_REF_NAME
  needs: []
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - public
    expire_in: 5 days
  when: always


build:package:
  stage: build
  before_script:
    - pdm config cache_dir ${PDM_CACHE_DIR}
  script:
    - pdm build || pdm lock --group :all --refresh
  needs: []
  artifacts:
    when: always
    paths:
      - pdm.lock
      - dist
    expire_in: 24 hrs
  cache:
    when: always
    key: pdmcache-$CI_COMMIT_BRANCH
    paths:
      - ${PDM_CACHE_DIR}


# manually set PDM_PUBLISH_PASSWORD in web interface to your pypi API token
release:package:
  stage: release
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: on_success
  variables:
    PDM_PUBLISH_USERNAME: __token__
  script:
    - pdm publish --no-build
  needs: [ "build:package" ]
