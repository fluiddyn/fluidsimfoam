?value: _assignment | file

EQKEY.2 : /[a-zA-Z]+\(\S+\)[a-zA-Z]*/

MACRO : /[\-]?\$[^;\s\)]+/
DOUBLE_NAME.1 : /[a-zA-Z_][a-zA-Z_\d]*[:\.-][:]?[a-zA-Z_\d\.]+/

_list_name: CNAME|ESCAPED_STRING|DOUBLE_NAME|SIGNED_NUMBER
_dict_name: CNAME|ESCAPED_STRING|DOUBLE_NAME|EQKEY
_var_name : CNAME|ESCAPED_STRING|DOUBLE_NAME|EQKEY

LIST_TYPE.2 : /List<[\w]+>/
list_info : _list_name [CNAME] [NEWLINE LIST_TYPE] [NEWLINE SIGNED_NUMBER]

directive: /#[a-zA-Z]+/ | /#[a-zA-Z]+{[^}]*}/
dimension_set : "[" (SIGNED_NUMBER)+ "]"
_dataentry : DOUBLE_NAME | CNAME | list | ESCAPED_STRING | MACRO | directive
    | SIGNED_NUMBER | dimension_set | EQKEY

list : "(" (_dataentry|NEWLINE|dict_assignment)* ")"

equal_assign: CNAME "=" (CNAME|SIGNED_NUMBER|list) | CNAME "=" NEWLINE list
_in_funtion_call : CNAME|DOUBLE_NAME|equal_assign|_funtion_call
_funtion_call : CNAME [NEWLINE] "(" [NEWLINE] (_in_funtion_call) ( "," [NEWLINE] (_in_funtion_call))* [NEWLINE] ")"

directive_assignment: [NEWLINE] directive (_funtion_call|CNAME|EQKEY|ESCAPED_STRING) [";"] NEWLINE
macro_assignment : [NEWLINE] MACRO ";" NEWLINE
list_assignment : [NEWLINE] list_info NEWLINE list ";" NEWLINE
var_assignment : [NEWLINE] _var_name [(_dataentry)+] ";" NEWLINE
dict_assignment : [NEWLINE] _dict_name NEWLINE "{" [NEWLINE] [(_assignment)+] "}" [";"] NEWLINE
code_assignment : [NEWLINE] CNAME NEWLINE /#{[\S\s]*?#};/ NEWLINE
dimension_assignment : [NEWLINE] CNAME [CNAME] dimension_set _dataentry ";" NEWLINE
_assignment : var_assignment | dict_assignment | list_assignment
              | dimension_assignment | code_assignment | macro_assignment | directive_assignment

file : (_assignment)+

CPP_COMMENT: /\/\/[^\n]*/ NEWLINE
C_COMMENT: "/*" /(.|\n)*?/ "*/" NEWLINE

%ignore /[\n\f\r]+/
%ignore CPP_COMMENT
%ignore C_COMMENT
%import common.SIGNED_NUMBER
%import common.ESCAPED_STRING
%import common.WS
%ignore WS
%import common.NEWLINE
%import common.CNAME
