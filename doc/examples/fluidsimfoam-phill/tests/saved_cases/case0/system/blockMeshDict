/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices
(
    (  0  80  0 )  // 0 v0-0
    (  2000  80  0 )  // 1 v1-0
    (  2000  2000  0 )  // 2 v2-0
    (  0  2000  0 )  // 3 v3-0
    (  0  80  0.01 )  // 4 v0+z
    (  2000  80  0.01 )  // 5 v1+z
    (  2000  2000  0.01 )  // 6 v2+z
    (  0  2000  0.01 )  // 7 v3+z
);

blocks
(
    hex (0 1 2 3 4 5 6 7) b0 (31 30 1) simpleGrading (1 ( ( 0.1 0.25 41.9 ) ( 0.9 0.75 1 ) ) 1)  // b0 (v0-0 v1-0 v2-0 v3-0 v0+z v1+z v2+z v3+z)
);

edges
(
    spline 0 1                      // spline0 (v0-0 v1-0)
    (
         (                  0                 80                  0 )
         (   66.6666666666667   79.1259040293522                  0 )
         (   133.333333333333    76.541818305704                  0 )
         (                200   72.3606797749979                  0 )
         (   266.666666666667   66.7652242543543                  0 )
         (   333.333333333333                 60                  0 )
         (                400   52.3606797749979                  0 )
         (   466.666666666667   44.1811385307061                  0 )
         (   533.333333333333   35.8188614692939                  0 )
         (                600   27.6393202250021                  0 )
         (   666.666666666667                 20                  0 )
         (   733.333333333333   13.2347757456457                  0 )
         (                800    7.6393202250021                  0 )
         (   866.666666666667   3.45818169429597                  0 )
         (   933.333333333333  0.874095970647772                  0 )
         (               1000                  0                  0 )
         (   1066.66666666667  0.874095970647777                  0 )
         (   1133.33333333333   3.45818169429596                  0 )
         (               1200    7.6393202250021                  0 )
         (   1266.66666666667   13.2347757456457                  0 )
         (   1333.33333333333                 20                  0 )
         (               1400   27.6393202250021                  0 )
         (   1466.66666666667   35.8188614692939                  0 )
         (   1533.33333333333   44.1811385307061                  0 )
         (               1600   52.3606797749979                  0 )
         (   1666.66666666667                 60                  0 )
         (   1733.33333333333   66.7652242543543                  0 )
         (               1800   72.3606797749979                  0 )
         (   1866.66666666667    76.541818305704                  0 )
         (   1933.33333333333   79.1259040293522                  0 )
         (               2000                 80                  0 )
)
    spline 4 5                      // spline1 (v0+z v1+z)
    (
         (                  0                 80               0.01 )
         (   66.6666666666667   79.1259040293522               0.01 )
         (   133.333333333333    76.541818305704               0.01 )
         (                200   72.3606797749979               0.01 )
         (   266.666666666667   66.7652242543543               0.01 )
         (   333.333333333333                 60               0.01 )
         (                400   52.3606797749979               0.01 )
         (   466.666666666667   44.1811385307061               0.01 )
         (   533.333333333333   35.8188614692939               0.01 )
         (                600   27.6393202250021               0.01 )
         (   666.666666666667                 20               0.01 )
         (   733.333333333333   13.2347757456457               0.01 )
         (                800    7.6393202250021               0.01 )
         (   866.666666666667   3.45818169429597               0.01 )
         (   933.333333333333  0.874095970647772               0.01 )
         (               1000                  0               0.01 )
         (   1066.66666666667  0.874095970647777               0.01 )
         (   1133.33333333333   3.45818169429596               0.01 )
         (               1200    7.6393202250021               0.01 )
         (   1266.66666666667   13.2347757456457               0.01 )
         (   1333.33333333333                 20               0.01 )
         (               1400   27.6393202250021               0.01 )
         (   1466.66666666667   35.8188614692939               0.01 )
         (   1533.33333333333   44.1811385307061               0.01 )
         (               1600   52.3606797749979               0.01 )
         (   1666.66666666667                 60               0.01 )
         (   1733.33333333333   66.7652242543543               0.01 )
         (               1800   72.3606797749979               0.01 )
         (   1866.66666666667    76.541818305704               0.01 )
         (   1933.33333333333   79.1259040293522               0.01 )
         (               2000                 80               0.01 )
)
);

boundary
(
    top
    {
        type wall;
        faces
        (
            (2 3 7 6)  // f-b0-n (v2-0 v3-0 v3+z v2+z)
        );
    }
    bottom
    {
        type wall;
        faces
        (
            (0 1 5 4)  // f-b0-s (v0-0 v1-0 v1+z v0+z)
        );
    }
    outlet
    {
        type cyclic;
        neighbourPatch  inlet;
        faces
        (
            (1 2 6 5)  // f-b0-e (v1-0 v2-0 v2+z v1+z)
        );
    }
    inlet
    {
        type cyclic;
        neighbourPatch  outlet;
        faces
        (
            (0 4 7 3)  // f-b0-w (v0-0 v0+z v3+z v3-0)
        );
    }
    frontandbackplanes
    {
        type empty;
        faces
        (
            (0 3 2 1)  // f-b0-b (v0-0 v3-0 v2-0 v1-0)
            (4 5 6 7)  // f-b0-t (v0+z v1+z v2+z v3+z)
        );
    }
);

// ************************************************************************* //
