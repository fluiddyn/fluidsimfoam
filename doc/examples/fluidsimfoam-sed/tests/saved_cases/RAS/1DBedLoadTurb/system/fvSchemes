FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}

ddtSchemes
{
    default    Euler implicit;
}

gradSchemes
{
    default    Gauss linear;
}

divSchemes
{
    default                 none;
    div(phi,alpha)          Gauss limitedLinear01 1;
    div(phir,alpha)         Gauss limitedLinear01 1;
    div(phi.a,U.a)          Gauss limitedLinearV 1;
    div(phi.b,U.b)          Gauss limitedLinearV 1;
    div(phiRa,Ua)           Gauss limitedLinear 1;
    div(phiRb,Ub)           Gauss limitedLinear 1;
    div(Rca)                Gauss linear;
    div(Rcb)                Gauss linear;
    div(alpha,nu)           Gauss linear;
    div(phi.b,k.b)          Gauss limitedLinear 1;
    div(phi.b,epsilon.b)    Gauss limitedLinear 1;
    div(phi.b,omega.b)      Gauss limitedLinear 1;
    div(phi,Theta)          Gauss limitedLinear 1;
    div(phia,alphaPlastic)  Gauss limitedLinear01 1;
    div(phia,pa_new_value)  Gauss limitedLinear 1;
}

laplacianSchemes
{
    default                 none;
    laplacian(nuEffa,U.a)   Gauss linear corrected;
    laplacian(nuEffb,U.b)   Gauss linear corrected;
    laplacian(nuFra,U.a)    Gauss linear corrected;
    laplacian((rho*(1|A(U))),p_rbgh)  Gauss linear corrected;
    laplacian(DkEff,k.b)    Gauss linear corrected;
    laplacian(DkEff,beta)   Gauss linear corrected;
    laplacian(DepsilonEff,epsilon.b)  Gauss linear corrected;
    laplacian(DepsilonEff,beta)  Gauss linear corrected;
    laplacian(DomegaEff,omega.b)  Gauss linear corrected;
    laplacian(kappa,Theta)  Gauss linear corrected;
    laplacian(kappaAlpha,alpha)  Gauss linear corrected;
}

interpolationSchemes
{
    default    linear;
}

snGradSchemes
{
    default    corrected;
}

fluxRequired
{
    default    no;
    p_rbgh;
}
