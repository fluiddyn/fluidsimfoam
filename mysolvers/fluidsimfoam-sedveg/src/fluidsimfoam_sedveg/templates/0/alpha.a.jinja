FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      alpha_a;
}

dimensions    [0 0 0 0 0 0 0];

internalField  #codeStream
{
    codeInclude
    #{
        #include "fvCFD.H"
    #};
    codeOptions
    #{
        -I$(LIB_SRC)/finiteVolume/lnInclude \
        -I$(LIB_SRC)/meshTools/lnInclude
    #};
    codeLibs
    #{
        -lfiniteVolume \
        -lmeshTools
    #};
    code
    #{
                const IOdictionary& d = static_cast<const IOdictionary&>(dict);
        	const fvMesh& mesh = refCast<const fvMesh>(d.db());
                scalarField alpha_a(mesh.nCells(), 0);

                forAll(mesh.C(), i)
                {
                    scalar y = mesh.C()[i].y();
                    alpha_a[i] = 0.305*(1.0+tanh((0.01-y)/0.001));
                }
                alpha_a.writeEntry("", os);
    #};
};

boundaryField
{
    inlet
    {
        type    cyclic;
    }
    outlet
    {
        type    cyclic;
    }
    top
    {
        type     fixedValue;
        value    uniform 0;
    }
    walls
    {
        type    zeroGradient;
    }
    frontAndBackPlanes
    {
        type    empty;
    }
}
